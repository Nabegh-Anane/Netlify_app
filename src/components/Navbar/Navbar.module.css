@import "../../vars.css";


.navbar {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 61px;
  z-index: 2;
  margin: 0 10%;
}

.logo {
  width: 50%;
  margin-left: 8px;
}

.menu {
  display: flex;
}

.languageIcon{
  
  width: 40px;
  height: 40px;
  margin-left: 35px;
  margin-top: 15px;
}
.chams {
  position: relative;
  display: block;
  width: 40px;
  height: 40px;
  margin-left: 35px;
  margin-top: 23px;
}
.menuItems {
  display: flex;
  gap: 47px;
  list-style: none;
}

.menuItems a {
  font-size: 25px;
  color: var(--color-text);
  text-decoration: none;
}

@media screen and (min-width: 830px) {
.menuBtn {
  visibility: hidden;
}}

@media screen and (max-width: 830px) {
  .navbar {
    align-items: center;
    align-self: center;
  }

  .logo {
    position: relative;
    width: 88%;
    margin-left: 8px;
  }
  .languageIcon {
    visibility: hidden;
  }
  .menu {
    position: relative;
    right: 0;
    margin-right: 10%;
    flex-direction: column;
    align-items: flex-end;
    gap: 11px;
    z-index: 3;
  }
  .chams {
    position: relative;
    display: block;
    margin-top: 12px;
    margin-left: auto;
  }
  .menuBtn {
    display: block;
    position: relative;
    margin-top: 60px;
  }

  .menuItems {
    display: none;
    flex-direction: column;
    align-items: center;
    gap: 5px;
    border-radius: 10px;
    background: rgb(25, 55, 109);
    background: linear-gradient(
      0deg,
      rgba(25, 55, 109, 0.2) 0%,
      rgba(25, 55, 109, 1) 100%
    );
    padding: 24px 45px;
    box-shadow: 0 30px 50px 0 rgba(0, 0, 0, 0.25);
  }

  .menuOpen {
    display: grid;
    z-index: 1;
  }
}





.sunandmoon > :is(.moon,.sun,.sunbeams) {
  transform-origin: center center;
}

.sunandmoon > :is(.moon,.sun) {
  fill: var(--icon-fill);
}

.themeToggle:is(:hover,:focus-visible) > .sunandmoon > :is(.moon,.sun) {
  fill: var(--icon-fill-hover);
}

.sunandmoon > .sunbeams {
  stroke: var(--icon-fill);
  stroke-width: 2px;
}

.themeToggle:is(:hover,:focus-visible) .sunandmoon > .sunbeams {
  stroke: var(--icon-fill-hover);
}

[data-theme=dark] .sunandmoon > .sun {
  transform: scale(1.75);
}

[data-theme=dark] .sunandmoon > .sunbeams {
  opacity: 0;
}

[data-theme=dark] .sunandmoon > .moon > circle {
  transform: translate(-7px);
}

@supports (cx: 1) {
  [data-theme=dark] .sunandmoon > .moon > circle {
    transform: translate(0);
    cx: 17;
  }
}
@media (prefers-reduced-motion: no-preference) {
  .sunandmoon > .sun {
    transition: transform 0.5s var(--ease-elastic-3);
  }

  .sunandmoon > .sunbeams {
    transition: transform 0.5s var(--ease-elastic-4), opacity 0.5s var(--ease-3);
  }

  .sunandmoon .moon > circle {
    transition: transform 0.25s var(--ease-out-5);
  }

  @supports (cx: 1) {
    .sunandmoon .moon > circle {
      transition: cx 0.25s var(--ease-out-5);
    }
  }
  [data-theme=dark] .sunandmoon > .sun {
    transform: scale(1.75);
    transition-timing-function: var(--ease-3);
    transition-duration: 0.25s;
  }

  [data-theme=dark] .sunandmoon > .sunbeams {
    transform: rotate(-25deg);
    transition-duration: 0.15s;
  }

  [data-theme=dark] .sunandmoon > .moon > circle {
    transition-delay: 0.25s;
    transition-duration: 0.5s;
  }
}
.themeToggle {
  --size: 3.6rem;
  --icon-fill: hsl(210 10% 30%);
  --icon-fill-hover: hsl(210 10% 15%);
  background: none;
  border: none;
  padding: 0;
  inline-size: var(--size);
  block-size: var(--size);
  aspect-ratio: 1;
  border-radius: 50%;
  cursor: pointer;
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
  outline-offset: 5px;
}

.themeToggle > svg {
  inline-size: 100%;
  block-size: 100%;
  stroke-linecap: round;
}

[data-theme=dark] .themeToggle {
  --icon-fill: hsl(210 10% 70%);
  --icon-fill-hover: hsl(210 15% 90%) ;
}

@media (hover: none) {
  .themeToggle {
    --size: 48px ;
  }
}
* {
  box-sizing: border-box;
  margin: 0;
}

@supports not (color-scheme: dark) {
  html[data-theme=dark] {
    background: #111;
  }
}
@-webkit-keyframes octocat-wave {
  0%, to {
    transform: rotate(0);
  }
  20%, 60% {
    transform: rotate(-25deg);
  }
  40%, 80% {
    transform: rotate(10deg);
  }
}
@keyframes octocat-wave {
  0%, to {
    transform: rotate(0);
  }
  20%, 60% {
    transform: rotate(-25deg);
  }
  40%, 80% {
    transform: rotate(10deg);
  }
}